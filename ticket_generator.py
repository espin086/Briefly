import streamlit as st

from gpt import generate_completion

import config


HOW_TO_SUMMARIZE = """ You need to provide an create a ticket for a jira/rally ticketing system. 



It should outline the ask, the scope, the acceptance criteria, and any blockers.:


Formatting Guide:

- use bold for the section headers
- use bullet points for each section
- You need to list out a set of steps as a checklist to complete the ticket as well.
- start each bullet point with a verb and use the present tense, plus use the active voice and bold the verb

"""


def render_text_area(section_title, help_text):
    """Render a text area component in the Streamlit app.

    Parameters:
        section_title (str): The title for this section.
        help_text (str): The help text for the text area.

    Returns:
        str: The text entered by the user in the text area.
    """
    return st.text_area("", help=help_text, key=section_title)


def render_summary_button():
    """Render a button for summarizing the input.

    Returns:
        bool: True if the button is clicked, False otherwise.
    """
    return st.button("Write Ticket", key="btn_summarize")


def get_summary(model, role, prompt):
    """Get a summary text generated by GPT.

    Parameters:
        model (str): The GPT model to use.
        role (str): The role description for the prompt.
        prompt (str): The prompt text to summarize.

    Returns:
        str: The generated summary text.
    """
    return generate_completion(model, role, prompt)


def main():
    """Main function to render the Streamlit app."""

    st.header("Goal")
    feature_input = render_text_area(
        "What do you want a story for?",
        "What is the specific issue or feature that needs to be addressed in this ticket?",
    )
    st.write("---")

    st.header("Acceptance Criteria")
    acceptance_input = render_text_area(
        "Acceptance Criteria?",
        "What is the expected outcome or desired functionality after the resolution of this ticket?",
    )
    st.write("---")

    prompt = f"""Here is your task {HOW_TO_SUMMARIZE}. 
    Ticket Description: {feature_input}. 
    Acceptance Criteria: {acceptance_input}.
    """

    if render_summary_button():
        summary = get_summary(config.GPT_MODEL, config.UserConfig().job_title, prompt)
        st.write(summary)


if __name__ == "__main__":
    main()
